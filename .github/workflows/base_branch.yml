name: Main Branch Checks

on:
  push:
    branches: [ main ]

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 20
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
      - name: Run Backend Tests
        run: make backend-test

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.sha }}
          path: coverage.out
          retention-days: 1

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install Frontend Dependencies
        run: |
          cd frontend/smarty-pants
          npm ci
      - name: Run Frontend Tests
        run: make frontend-test

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-${{ github.sha }}
          path: frontend/smarty-pants/coverage/lcov.info
          retention-days: 1

  code-analysis:
    runs-on: ubuntu-latest
    needs: [ backend-test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-${{ github.sha }}
          path: ./
        continue-on-error: true

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-build-backend:
    needs:
      - backend-test
    name: Backend Docker Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: false
          load: true
          tags: backend:${{ github.sha }}

      - name: Cleanup
        if: always()
        run: docker image rm backend:${{ github.sha }}